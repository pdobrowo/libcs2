#
# Try to find the GMP librairies
#
# CS2_FOUND - system has CS2 lib
# CS2_INCLUDE_DIR - the CS2 include directory
# CS2_LIBRARY_DIR - the CS2 library directory
# CS2_LIBRARIES - libraries needed to use CS2
# 

# cs2
set(CS2_DIR ${CMAKE_CURRENT_LIST_DIR}/..)

# base
set(CS2_INCLUDE_DIR ${CS2_DIR}/inc)
set(CS2_LIBRARY_DIR ${CS2_DIR}/lib)
set(CS2_LIBRARIES cs2)

# modules
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_LIST_DIR})

# gmp
find_package(GMP REQUIRED)
set(CS2_INCLUDE_DIR ${CS2_INCLUDE_DIR} ${GMP_INCLUDE_DIR})
set(CS2_LIBRARIES ${CS2_LIBRARIES} ${GMP_LIBRARIES})

# other
set(CS2_LIBRARIES ${CS2_LIBRARIES} pthread)

if(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
    set(CS2_LIBRARIES ${CS2_LIBRARIES} rt dl)
endif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")

if(${CMAKE_SYSTEM_NAME} MATCHES "FreeBSD")
    set(CS2_LIBRARIES ${CS2_LIBRARIES} kvm)
endif(${CMAKE_SYSTEM_NAME} MATCHES "FreeBSD")

if(${CMAKE_SYSTEM_NAME} MATCHES "DragonFly")
    set(CS2_LIBRARIES ${CS2_LIBRARIES} kvm)
endif(${CMAKE_SYSTEM_NAME} MATCHES "DragonFly")

# info
message(STATUS "CS2_DIR: ${CS2_DIR}")
message(STATUS "CS2_INCLUDE_DIR: ${CS2_INCLUDE_DIR}")
message(STATUS "CS2_LIBRARY_DIR: ${CS2_LIBRARY_DIR}")
message(STATUS "CS2_LIBRARIES: ${CS2_LIBRARIES}")

# setup
if(CS2_LIBRARY_DIR AND CS2_INCLUDE_DIR AND CS2_LIBRARIES)
    SET(CS2_FOUND "YES")
else(CS2_LIBRARY_DIR AND CS2_INCLUDE_DIR AND CS2_LIBRARIES)
    SET(CS2_FOUND "NO")
endif(CS2_LIBRARY_DIR AND CS2_INCLUDE_DIR AND CS2_LIBRARIES)

if(CS2_FOUND)
    message(STATUS "Found CS2: ${CS2_LIBRARIES}")
else(CS2_FOUND)
    if(CS2_FIND_REQUIRED)
        message(FATAL_ERROR "Could not find CS2 library")
    endif(CS2_FIND_REQUIRED)
endif(CS2_FOUND)

