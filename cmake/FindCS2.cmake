# -*- cmake -*-

# - Find CS2
#
#  Find the CS2 includes and libraries
#  This module defines
#
#  CS2_INCLUDE_DIR: the paths to CS2 include files
#  CS2_LIBRARY_DIR: the paths to CS2 library files
#  CS2_LIBRARIES: the libraries to link CS2
#  CS2_FOUND: set to YES if CS2 was found

# minimum cmake version (for CMAKE_CURRENT_LIST_DIR)
CMAKE_MINIMUM_REQUIRED(VERSION 2.8.3)

# cs2
SET (CS2_DIR ${CMAKE_CURRENT_LIST_DIR}/..)

# base
SET (CS2_INCLUDE_DIR ${CS2_DIR}/inc)
SET (CS2_LIBRARY_DIR ${CS2_DIR}/lib)
SET (CS2_LIBRARIES cs2)

# modules
SET (CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_LIST_DIR})

# gmp
FIND_PACKAGE(GMP REQUIRED)
SET (CS2_INCLUDE_DIR ${CS2_INCLUDE_DIR} ${GMP_INCLUDE_DIR})
SET (CS2_LIBRARIES ${CS2_LIBRARIES} ${GMP_LIBRARIES})

# other
SET (CS2_LIBRARIES ${CS2_LIBRARIES} pthread)

if(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
    SET (CS2_LIBRARIES ${CS2_LIBRARIES} rt)
endif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")

if(${CMAKE_SYSTEM_NAME} MATCHES "FreeBSD")
    SET (CS2_LIBRARIES ${CS2_LIBRARIES} kvm)
endif(${CMAKE_SYSTEM_NAME} MATCHES "FreeBSD")

if(${CMAKE_SYSTEM_NAME} MATCHES "DragonFly")
    SET (CS2_LIBRARIES ${CS2_LIBRARIES} kvm)
endif(${CMAKE_SYSTEM_NAME} MATCHES "DragonFly")

# info
MESSAGE(STATUS "CS2_DIR: ${CS2_DIR}")
MESSAGE(STATUS "CS2_INCLUDE_DIR: ${CS2_INCLUDE_DIR}")
MESSAGE(STATUS "CS2_LIBRARY_DIR: ${CS2_LIBRARY_DIR}")
MESSAGE(STATUS "CS2_LIBRARIES: ${CS2_LIBRARIES}")

# setup
IF (CS2_LIBRARY_DIR AND CS2_INCLUDE_DIR AND CS2_LIBRARIES)
    SET(CS2_FOUND "YES")
ELSE (CS2_LIBRARY_DIR AND CS2_INCLUDE_DIR AND CS2_LIBRARIES)
    SET(CS2_FOUND "NO")
ENDIF (CS2_LIBRARY_DIR AND CS2_INCLUDE_DIR AND CS2_LIBRARIES)

IF (CS2_FOUND)
    MESSAGE(STATUS "Found CS2: ${CS2_LIBRARIES}")
ELSE (CS2_FOUND)
    IF (CS2_FIND_REQUIRED)
        MESSAGE(FATAL_ERROR "Could not find CS2 library")
    ENDIF (CS2_FIND_REQUIRED)
ENDIF (CS2_FOUND)
